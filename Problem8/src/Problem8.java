import java.util.ArrayList;

public class Problem8 {

// Find the greatest product of five consecutive digits in a 1000-digit number
	
	static String number = "731671765313306249192251196744265" +
			"7474235534919493496983520312774506326239578318016" +
			"9848018694788518438586156078911294949545950173795" +
			"8331952853208805511125406987471585238630507156932" +
			"9096329522744304355766896648950445244523161731856" +
			"4030987111217223831136222989342338030813533627661" +
			"4282806444486645238749303589072962904915604407723" +
			"9071381051585930796086670172427121883998797908792" +
			"2749219016997208880937766572733300105336788122023" +
			"5421809751254540594752243525849077116705560136048" +
			"3958644670632441572215539753697817977846174064955" +
			"1492908625693219784686224828397224137565705605749" +
			"0261407972968652414535100474821663704844031998900" +
			"0889524345065854122758866688116427171479924442928" +
			"2308634656748139191231628245861786645835912456652" +
			"9476545682848912883142607690042242190226710556263" +
			"2111110937054421750694165896040807198403850962455" +
			"4443629812309878799272442849091888458015616609791" +
			"9133875499200524063689912560717606058861164671094" +
			"0507754100225698315520005593572972571636269561882" +
			"670428252483600823257530420752963450";

	public static void main(String[] args) {		
		long startTime = System.currentTimeMillis();
		int max = 0;
		int product = 0;
		
		for(int i = 0; i < 1000; i++){
			product = product(i);
			if(product > max){
				max = product;
			}
		}
		
		System.out.println("Largest product of 5 consecutive digits in the 1000-" +
				"digit number: " + max + ". (" + (System.currentTimeMillis() - startTime) 
				+ "ms)");

	}
	
	// returns the product of 5 consecutive numbers
	// starting with int start IF the first number is a 9!
	public static int product(int start){
		int result = 1;
		if( Integer.parseInt( Character.toString(number.charAt(start))) != 9 ){
			return 1;
		}
		try {
			for(int i = 0; i < 5; i++){
				result = result * Integer.parseInt( Character.toString(number.charAt(start + i)) );
			}
		} catch (Exception e) {
		}
		return result;
	}
	
}
